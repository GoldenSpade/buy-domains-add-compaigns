import { defineStore } from 'pinia'
import { ref, watch } from 'vue'

export const useTonicStore = defineStore('tonic', () => {
  const cards = ref([])
  const completedCards = ref([])

  // –ó–∞–≥—Ä—É–∂–∞–µ–º cards –∏–∑ localStorage –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  const loadCardsFromLS = () => {
    try {
      const saved = localStorage.getItem('tonicCards')
      if (saved) {
        const parsed = JSON.parse(saved)
        cards.value = Array.isArray(parsed) ? parsed : []
        console.log(`üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${cards.value.length} –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑ localStorage`)
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ cards –∏–∑ localStorage:', error)
      cards.value = []
    }
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º cards –≤ localStorage
  const saveCardsToLS = () => {
    try {
      localStorage.setItem('tonicCards', JSON.stringify(cards.value))
      console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${cards.value.length} –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ localStorage`)
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cards –≤ localStorage:', error)
    }
  }

  // –ó–∞–≥—Ä—É–∂–∞–µ–º completedCards –∏–∑ localStorage –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  const loadCompletedCardsFromLS = () => {
    try {
      const saved = localStorage.getItem('tonicCompletedCards')
      if (saved) {
        const parsed = JSON.parse(saved)
        completedCards.value = Array.isArray(parsed) ? parsed : []
        console.log(
          `üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${completedCards.value.length} –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑ localStorage`
        )
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ completedCards –∏–∑ localStorage:', error)
      completedCards.value = []
    }
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º completedCards –≤ localStorage
  const saveCompletedCardsToLS = () => {
    try {
      localStorage.setItem('tonicCompletedCards', JSON.stringify(completedCards.value))
      console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${completedCards.value.length} –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ localStorage`)
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è completedCards –≤ localStorage:', error)
    }
  }

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ cards
  watch(cards, saveCardsToLS, { deep: true })

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ completedCards
  watch(completedCards, saveCompletedCardsToLS, { deep: true })

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ store
  loadCardsFromLS()
  loadCompletedCardsFromLS()

  const addCard = (card) => {
    cards.value.push(card)
    // saveCardsToLS() –≤—ã–∑–æ–≤–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ watch
  }

  const clearCards = () => {
    cards.value = []
    // saveCardsToLS() –≤—ã–∑–æ–≤–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ watch
  }

  const removeCard = (cardToRemove) => {
    cards.value = cards.value.filter(
      (card) =>
        !(
          card.offer === cardToRemove.offer &&
          card.country === cardToRemove.country &&
          card.buyer === cardToRemove.buyer &&
          card.trafficSource === cardToRemove.trafficSource
        )
    )
    // saveCardsToLS() –≤—ã–∑–æ–≤–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ watch
  }

  // –ù–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–º–∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
  const moveCardToCompleted = (card) => {
    // –£–¥–∞–ª—è–µ–º –∏–∑ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
    cards.value = cards.value.filter((c) => c.__id !== card.__id)

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ
    completedCards.value.push({ ...card })

    console.log(`‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ "${card.adTitle}" –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞ –≤ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ`)
    // saveCardsToLS() –∏ saveCompletedCardsToLS() –≤—ã–∑–æ–≤—É—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ watch
  }

  const removeCompletedCard = (cardToRemove) => {
    completedCards.value = completedCards.value.filter((c) => c.__id !== cardToRemove.__id)
    console.log(`üóëÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ "${cardToRemove.adTitle}" —É–¥–∞–ª–µ–Ω–∞`)
    // saveCompletedCardsToLS() –≤—ã–∑–æ–≤–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ watch
  }

  // –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
  const clearCompletedCards = () => {
    completedCards.value = []
    console.log('üóëÔ∏è –í—Å–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —É–¥–∞–ª–µ–Ω—ã')
    // saveCompletedCardsToLS() –≤—ã–∑–æ–≤–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ watch
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
  const isCardCompleted = (card) => {
    return !!(
      card.resId &&
      card.resUrl &&
      card.clickflareId &&
      card.clickflareCampaignId &&
      card.clickflareCampaignUrl &&
      !card.error &&
      !card.clickFlareError
    )
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä—É—á–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ localStorage (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
  const clearAllLocalStorage = () => {
    try {
      localStorage.removeItem('tonicCards')
      localStorage.removeItem('tonicCompletedCards')
      cards.value = []
      completedCards.value = []
      console.log('üóëÔ∏è –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage –æ—á–∏—â–µ–Ω—ã')
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ localStorage:', error)
    }
  }

  return {
    cards,
    completedCards,
    addCard,
    clearCards,
    removeCard,
    moveCardToCompleted,
    removeCompletedCard,
    clearCompletedCards,
    isCardCompleted,
    loadCardsFromLS,
    saveCardsToLS,
    loadCompletedCardsFromLS,
    saveCompletedCardsToLS,
    clearAllLocalStorage,
  }
})
