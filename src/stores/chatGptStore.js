import { defineStore } from 'pinia'
import { reactive, watch } from 'vue'

export const useChatGptStore = defineStore('chatGptStore', () => {
  // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  const defaultPrompts = {
    adTitle: {
      systemPrompt:
        'You are a expert marketing copywriter. Generate compelling, short ad titles that grab attention and drive clicks. Always respond with just the title, no quotes or additional text.',
      userPromptTemplate:
        'Generate a headline / ad title for social media ad on [topic] for [country] audience on [traffic source] platform. Maximum 50 characters. Return only the title without quotes or extra text.',
      settings: {
        model: 'gpt-4o-mini',
        temperature: 0.7,
        max_tokens: 100,
      },
      // UI —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      testAnswer: '',
      testError: '',
      isLoading: false,
      testDetails: null,
    },
    keywords: {
      systemPrompt:
        'You are an expert SEO and PPC specialist. Generate high-value, expensive keywords that would have high cost-per-click in Google Ads. Focus on commercial intent keywords. Always respond with just the keywords separated by commas, no additional text.',
      userPromptTemplate:
        'Give me 6 most expensive keywords from Google Keywords Planner related to: "{inputWords}". Target country: {country}. Traffic source: {trafficSource}. Return only the keywords separated by commas, without any additional text or explanations.',
      settings: {
        model: 'gpt-4o-mini',
        temperature: 0.7,
        max_tokens: 150,
      },
      // UI —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      testAnswer: '',
      testError: '',
      isLoading: false,
      testDetails: null,
    },
  }

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ localStorage
  const loadPromptsFromLS = () => {
    try {
      const saved = localStorage.getItem('chatGptPrompts')
      if (saved) {
        const parsed = JSON.parse(saved)
        // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ (–Ω–∞ —Å–ª—É—á–∞–π –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π)
        return {
          ...defaultPrompts,
          ...parsed,
          adTitle: {
            ...defaultPrompts.adTitle,
            ...parsed.adTitle,
          },
          keywords: {
            ...defaultPrompts.keywords,
            ...parsed.keywords,
          },
        }
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ –∏–∑ localStorage:', error)
    }
    return defaultPrompts
  }

  // –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage
  const savePromptsToLS = () => {
    try {
      localStorage.setItem('chatGptPrompts', JSON.stringify(prompts))
      console.log('üíæ ChatGPT –ø—Ä–æ–º–ø—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage')
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤ –≤ localStorage:', error)
    }
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º prompts —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ localStorage –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏
  const prompts = reactive(loadPromptsFromLS())

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ prompts
  watch(prompts, savePromptsToLS, { deep: true })

  // –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ –∫ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º
  const resetToDefaults = () => {
    Object.assign(prompts, defaultPrompts)
    console.log('üîÑ –ü—Ä–æ–º–ø—Ç—ã —Å–±—Ä–æ—à–µ–Ω—ã –∫ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º')
  }

  // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ localStorage (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
  const clearLocalStorage = () => {
    try {
      localStorage.removeItem('chatGptPrompts')
      Object.assign(prompts, defaultPrompts)
      console.log('üóëÔ∏è localStorage –¥–ª—è ChatGPT –ø—Ä–æ–º–ø—Ç–æ–≤ –æ—á–∏—â–µ–Ω')
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ localStorage:', error)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ AdTitle –ø–æ–ª–µ–π –∫ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º
  const resetAdTitleFields = () => {
    prompts.adTitle.systemPrompt = ''
    prompts.adTitle.userPromptTemplate = ''
    prompts.adTitle.testAnswer = ''
    prompts.adTitle.testError = ''
    prompts.adTitle.testDetails = null
    console.log('üîÑ AdTitle –ø–æ–ª—è —Å–±—Ä–æ—à–µ–Ω—ã –∫ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º')
  }

  // –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ Keywords –ø–æ–ª–µ–π –∫ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º
  const resetKeywordsFields = () => {
    prompts.keywords.systemPrompt = ''
    prompts.keywords.userPromptTemplate = ''
    prompts.keywords.testAnswer = ''
    prompts.keywords.testError = ''
    prompts.keywords.testDetails = null
    console.log('üîÑ Keywords –ø–æ–ª—è —Å–±—Ä–æ—à–µ–Ω—ã –∫ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º')
  }

  return {
    prompts,
    resetToDefaults,
    clearLocalStorage,
    savePromptsToLS,
    loadPromptsFromLS,
    resetAdTitleFields,
    resetKeywordsFields,
  }
})
